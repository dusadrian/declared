# Generated by roxygen2: do not edit by hand

S3method("!",declared)
S3method("!=",declared)
S3method("%%",declared)
S3method("%/%",declared)
S3method("&",declared)
S3method("*",declared)
S3method("+",declared)
S3method("-",declared)
S3method("/",declared)
S3method("<",declared)
S3method("<=",declared)
S3method("==",declared)
S3method(">",declared)
S3method(">=",declared)
S3method("[",declared)
S3method("[",labels_df)
S3method("[<-",declared)
S3method("^",declared)
S3method("label<-",data.frame)
S3method("label<-",declared)
S3method("label<-",default)
S3method("label<-",haven_labelled_spss)
S3method("labels<-",declared)
S3method("labels<-",default)
S3method("labels<-",haven_labelled_spss)
S3method("measurement<-",declared)
S3method("measurement<-",default)
S3method("missing_range<-",declared)
S3method("missing_range<-",default)
S3method("missing_values<-",declared)
S3method("missing_values<-",default)
S3method("names<-",declared)
S3method("|",declared)
S3method(Arg,declared)
S3method(Conj,declared)
S3method(Im,declared)
S3method(Mod,declared)
S3method(Re,declared)
S3method(abs,declared)
S3method(acos,declared)
S3method(all,equal.declared)
S3method(as.character,declared)
S3method(as.declared,data.frame)
S3method(as.declared,default)
S3method(as.declared,factor)
S3method(as.declared,haven_labelled)
S3method(as.haven,data.frame)
S3method(as.haven,declared)
S3method(as.haven,default)
S3method(as.haven,haven_labelled)
S3method(as.haven,haven_labelled_spss)
S3method(asin,declared)
S3method(atan,declared)
S3method(c,declared)
S3method(ceiling,declared)
S3method(cos,declared)
S3method(cospi,declared)
S3method(cummax,declared)
S3method(cummin,declared)
S3method(cumprod,declared)
S3method(cumsum,declared)
S3method(declared,default)
S3method(digamma,declared)
S3method(drop_na,data.frame)
S3method(drop_na,declared)
S3method(drop_na,default)
S3method(drop_na,haven_labelled_spss)
S3method(duplicated,declared)
S3method(exp,declared)
S3method(expm1,declared)
S3method(floor,declared)
S3method(gamma,declared)
S3method(head,declared)
S3method(head,labels_df)
S3method(label,data.frame)
S3method(label,declared)
S3method(label,default)
S3method(label,haven_labelled_spss)
S3method(labels,data.frame)
S3method(labels,declared)
S3method(labels,haven_labelled_spss)
S3method(lgamma,declared)
S3method(log,declared)
S3method(log1p,declared)
S3method(mean,declared)
S3method(measurement,declared)
S3method(measurement,default)
S3method(median,declared)
S3method(missing_range,data.frame)
S3method(missing_range,declared)
S3method(missing_range,default)
S3method(missing_range,haven_labelled_spss)
S3method(missing_values,data.frame)
S3method(missing_values,declared)
S3method(missing_values,default)
S3method(missing_values,haven_labelled_spss)
S3method(na.exclude,declared)
S3method(na.fail,declared)
S3method(na.omit,declared)
S3method(print,declared)
S3method(print,fobject)
S3method(print,labels_df)
S3method(print,w_table)
S3method(round,declared)
S3method(sign,declared)
S3method(signif,declared)
S3method(sin,declared)
S3method(sinpi,declared)
S3method(sort,declared)
S3method(sqrt,declared)
S3method(summary,declared)
S3method(tail,declared)
S3method(tail,labels_df)
S3method(tan,declared)
S3method(tanpi,declared)
S3method(trigamma,declared)
S3method(trunc,declared)
S3method(undeclare,data.frame)
S3method(undeclare,declared)
S3method(undeclare,default)
S3method(unique,declared)
export("label<-")
export("labels<-")
export("measurement<-")
export("missing_range<-")
export("missing_values<-")
export(anyNAdeclared)
export(anyNAempty)
export(as.declared)
export(as.haven)
export(declared)
export(drop_na)
export(format_declared)
export(getTag_)
export(hasTag_)
export(is.declared)
export(is.empty)
export(label)
export(makeTag_)
export(measurement)
export(missing_range)
export(missing_values)
export(names_values)
export(order_declared)
export(undeclare)
export(value_labels)
export(variable_label)
export(w_IQR)
export(w_fivenum)
export(w_mean)
export(w_median)
export(w_mode)
export(w_quantile)
export(w_sd)
export(w_standardize)
export(w_summary)
export(w_table)
export(w_var)
importFrom(stats,median)
importFrom(stats,na.exclude)
importFrom(stats,na.fail)
importFrom(stats,na.omit)
importFrom(utils,capture.output)
importFrom(utils,head)
importFrom(utils,tail)
useDynLib(declared, .registration = TRUE)
